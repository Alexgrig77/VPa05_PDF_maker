#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
–î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–æ–Ω–Ω—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä–∞ —Å—á–µ—Ç–æ–≤
–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –æ—Å–Ω–æ–≤–Ω—ã–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –ø—Ä–æ–≥—Ä–∞–º–º—ã
"""

from schet_generator import SchetGenerator
from pathlib import Path
import pandas as pd

def demo_schet_generator():
    """–î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –æ—Å–Ω–æ–≤–Ω—ã—Ö –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–µ–π –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä–∞ —Å—á–µ—Ç–æ–≤"""
    print("üöÄ –î–ï–ú–û–ù–°–¢–†–ê–¶–ò–Ø –ì–ï–ù–ï–†–ê–¢–û–†–ê –°–ß–ï–¢–û–í")
    print("=" * 50)
    
    generator = SchetGenerator()
    
    # 1. –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –¥–æ—Å—Ç—É–ø–Ω—ã–µ —Ñ–∞–π–ª—ã
    print("\nüìÅ –ê–ù–ê–õ–ò–ó –î–û–°–¢–£–ü–ù–´–• –§–ê–ô–õ–û–í:")
    print("-" * 30)
    
    data_files = generator.get_data_files()
    template_files = generator.get_template_files()
    
    print(f"üìä –§–∞–π–ª–æ–≤ –¥–∞–Ω–Ω—ã—Ö: {len(data_files)}")
    for file in data_files:
        print(f"   ‚Ä¢ {file.name}")
    
    print(f"\nüé® HTML —à–∞–±–ª–æ–Ω–æ–≤: {len(template_files)}")
    for file in template_files:
        print(f"   ‚Ä¢ {file.name}")
    
    if not data_files or not template_files:
        print("\n‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω—ã —Ñ–∞–π–ª—ã –¥–∞–Ω–Ω—ã—Ö –∏–ª–∏ —à–∞–±–ª–æ–Ω—ã!")
        return
    
    # 2. –î–µ–º–æ–Ω—Å—Ç—Ä–∏—Ä—É–µ–º —á—Ç–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö
    print(f"\nüìñ –î–ï–ú–û–ù–°–¢–†–ê–¶–ò–Ø –ß–¢–ï–ù–ò–Ø –î–ê–ù–ù–´–•:")
    print("-" * 35)
    
    # –ß–∏—Ç–∞–µ–º CSV —Å –¥–∞–Ω–Ω—ã–º–∏ —Å—á–µ—Ç–æ–≤
    csv_file = next((f for f in data_files if 'scheta' in f.name.lower()), None)
    if csv_file:
        print(f"üìÑ –ß–∏—Ç–∞–µ–º CSV: {csv_file.name}")
        csv_data = generator.read_csv_file(csv_file)
        if not csv_data.empty:
            print(f"   ‚úì –ü—Ä–æ—á–∏—Ç–∞–Ω–æ {len(csv_data)} —Å—Ç—Ä–æ–∫")
            print(f"   ‚úì –ö–æ–ª–æ–Ω–∫–∏: {', '.join(csv_data.columns)}")
            
            # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –¥–æ—Å—Ç—É–ø–Ω—ã–µ —Å—á–µ—Ç–∞
            csv_invoices = generator.get_available_invoices(csv_data)
            print(f"   ‚úì –î–æ—Å—Ç—É–ø–Ω—ã–µ —Å—á–µ—Ç–∞: {', '.join(csv_invoices[:3])}{'...' if len(csv_invoices) > 3 else ''}")
            
            # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–∏–º–µ—Ä –¥–∞–Ω–Ω—ã—Ö
            print(f"\nüìã –ü–†–ò–ú–ï–† –î–ê–ù–ù–´–•:")
            print("-" * 20)
            sample_data = csv_data.head(3)
            for _, row in sample_data.iterrows():
                print(f"   ‚Ä¢ {row['–Ω–æ–º–µ—Ä_—Å—á–µ—Ç–∞']} | {row['–∫–ª–∏–µ–Ω—Ç']} | {row['—Ç–æ–≤–∞—Ä']} | {row['–æ–±—â–∞—è_—Å—É–º–º–∞']} —Ä—É–±.")
    
    # 3. –î–µ–º–æ–Ω—Å—Ç—Ä–∏—Ä—É–µ–º –≥–µ–Ω–µ—Ä–∞—Ü–∏—é PDF
    print(f"\nüìÑ –î–ï–ú–û–ù–°–¢–†–ê–¶–ò–Ø –ì–ï–ù–ï–†–ê–¶–ò–ò PDF:")
    print("-" * 35)
    
    # –í—ã–±–∏—Ä–∞–µ–º –ø–µ—Ä–≤—ã–π —Ñ–∞–π–ª –∏ —à–∞–±–ª–æ–Ω
    selected_data_file = data_files[0]
    selected_template = template_files[0]
    
    print(f"üìä –ò—Å–ø–æ–ª—å–∑—É–µ–º –¥–∞–Ω–Ω—ã–µ: {selected_data_file.name}")
    print(f"üé® –ò—Å–ø–æ–ª—å–∑—É–µ–º —à–∞–±–ª–æ–Ω: {selected_template.name}")
    
    # –ß–∏—Ç–∞–µ–º –¥–∞–Ω–Ω—ã–µ
    data = generator.read_csv_file(selected_data_file)
    
    if data is None or data.empty:
        print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–æ—á–∏—Ç–∞—Ç—å –¥–∞–Ω–Ω—ã–µ!")
        return
    
    # –ü–æ–ª—É—á–∞–µ–º –ø–µ—Ä–≤—ã–π —Å—á–µ—Ç
    invoices = generator.get_available_invoices(data)
    if not invoices:
        print("‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω—ã –¥–æ—Å—Ç—É–ø–Ω—ã–µ —Å—á–µ—Ç–∞!")
        return
    
    selected_invoice = invoices[0]
    print(f"üìÑ –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º PDF –¥–ª—è —Å—á–µ—Ç–∞: {selected_invoice}")
    
    # –§–∏–ª—å—Ç—Ä—É–µ–º –¥–∞–Ω–Ω—ã–µ
    filtered_data = generator.filter_data_by_invoice(data, selected_invoice)
    
    # –†–µ–Ω–¥–µ—Ä–∏–º —à–∞–±–ª–æ–Ω
    html_content = generator.render_template(selected_template, filtered_data, selected_invoice)
    
    # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º PDF
    output_filename = f"demo_schet_{selected_invoice}_{selected_template.stem}.pdf"
    output_path = generator.output_dir / output_filename
    
    print(f"\nüéØ –°–æ–∑–¥–∞–µ–º PDF: {output_filename}")
    
    if generator.generate_pdf(html_content, output_path, filtered_data, selected_invoice):
        print(f"‚úÖ PDF —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω!")
        print(f"üìÅ –ü—É—Ç—å: {output_path.absolute()}")
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å–æ–∑–¥–∞–Ω–Ω–æ–º —Ñ–∞–π–ª–µ
        if output_path.exists():
            file_size = output_path.stat().st_size
            print(f"üìä –†–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞: {file_size} –±–∞–π—Ç")
        
        print(f"\nüîç –û—Ç–∫—Ä—ã–≤–∞–µ–º PDF...")
        generator.open_pdf(output_path)
        
    else:
        print("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ PDF!")
    
    # 4. –î–µ–º–æ–Ω—Å—Ç—Ä–∏—Ä—É–µ–º —Å–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–≥–æ —Å—á–µ—Ç–∞
    print(f"\nüÜï –î–ï–ú–û–ù–°–¢–†–ê–¶–ò–Ø –°–û–ó–î–ê–ù–ò–Ø –ù–û–í–û–ì–û –°–ß–ï–¢–ê:")
    print("-" * 40)
    
    # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –Ω–æ–≤–æ–≥–æ —Å—á–µ—Ç–∞
    new_items = [
        {
            '—Ç–æ–≤–∞—Ä': '–ü—Ä–∏–Ω—Ç–µ—Ä HP LaserJet',
            '–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ': 1,
            '—Ü–µ–Ω–∞_–∑–∞_–µ–¥–∏–Ω–∏—Ü—É': 25000
        },
        {
            '—Ç–æ–≤–∞—Ä': '–ö–∞—Ä—Ç—Ä–∏–¥–∂ –¥–ª—è –ø—Ä–∏–Ω—Ç–µ—Ä–∞',
            '–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ': 3,
            '—Ü–µ–Ω–∞_–∑–∞_–µ–¥–∏–Ω–∏—Ü—É': 3000
        }
    ]
    
    customer_name = "–û–û–û '–¢–µ—Å—Ç–ö–ª–∏–µ–Ω—Ç'"
    
    print(f"üë§ –ö–ª–∏–µ–Ω—Ç: {customer_name}")
    print(f"üì¶ –¢–æ–≤–∞—Ä—ã:")
    for item in new_items:
        total = item['–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ'] * item['—Ü–µ–Ω–∞_–∑–∞_–µ–¥–∏–Ω–∏—Ü—É']
        print(f"   ‚Ä¢ {item['—Ç–æ–≤–∞—Ä']} x{item['–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ']} = {total:,.2f} —Ä—É–±.")
    
    # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –Ω–æ–≤—ã–π —Å—á–µ—Ç
    new_invoice_number = generator.generate_new_invoice(customer_name, new_items)
    
    if new_invoice_number:
        print(f"\n‚úÖ –ù–æ–≤—ã–π —Å—á–µ—Ç —Å–æ–∑–¥–∞–Ω!")
        print(f"üìã –ù–æ–º–µ—Ä —Å—á–µ—Ç–∞: {new_invoice_number}")
    
    # 5. –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏—Ç–æ–≥–æ–≤—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é
    print(f"\nüìã –ò–¢–û–ì–û–í–ê–Ø –ò–ù–§–û–†–ú–ê–¶–ò–Ø:")
    print("-" * 25)
    print(f"‚úÖ –ü—Ä–æ–≥—Ä–∞–º–º–∞ —É—Å–ø–µ—à–Ω–æ –ø—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–ª–∞ —Ñ–∞–π–ª—ã")
    print(f"‚úÖ –°–æ–∑–¥–∞–Ω PDF –¥–æ–∫—É–º–µ–Ω—Ç –∏–∑ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –¥–∞–Ω–Ω—ã—Ö")
    print(f"‚úÖ –°–æ–∑–¥–∞–Ω –Ω–æ–≤—ã–π —Å—á–µ—Ç —Å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–º –Ω–æ–º–µ—Ä–æ–º")
    print(f"‚úÖ PDF —Ñ–∞–π–ª—ã –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –æ—Ç–∫—Ä—ã—Ç—ã")
    print(f"\nüí° –î–ª—è –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –∑–∞–ø—É—Å—Ç–∏—Ç–µ:")
    print(f"   python schet_generator.py")

def demo_automatic_counter():
    """–î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è —Ä–∞–±–æ—Ç—ã –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ —Å—á–µ—Ç—á–∏–∫–∞"""
    print("\nüî¢ –î–ï–ú–û–ù–°–¢–†–ê–¶–ò–Ø –ê–í–¢–û–ú–ê–¢–ò–ß–ï–°–ö–û–ì–û –°–ß–ï–¢–ß–ò–ö–ê:")
    print("-" * 45)
    
    generator = SchetGenerator()
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –Ω–µ—Å–∫–æ–ª—å–∫–æ –Ω–æ–º–µ—Ä–æ–≤ —Å—á–µ—Ç–æ–≤
    print("üìã –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –Ω–µ—Å–∫–æ–ª—å–∫–æ –Ω–æ–º–µ—Ä–æ–≤ —Å—á–µ—Ç–æ–≤:")
    for i in range(3):
        invoice_number = generator.get_next_invoice_number()
        print(f"   {i+1}. {invoice_number}")
    
    print("\n‚úÖ –°—á–µ—Ç—á–∏–∫ —Ä–∞–±–æ—Ç–∞–µ—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏!")

if __name__ == "__main__":
    demo_schet_generator()
    demo_automatic_counter()
